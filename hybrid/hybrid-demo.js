//hybrid是什么,为什么要用hybrid?
    //1.混合开发,前端和客户端共同开发配合完成;

//hybird存在的价值.
    //1.可以快速得待更新,无需应用商店的审核.
    //2.体验流畅(基本和native的体验是类似的).
    //3.减少开发成本和沟通成本.双端公用一套代码.


//hybrid的缺点
    //1.开发成本高:联调/测试/查bug都比较麻烦;
    //2.运维成本高,更新上线流程复杂;

//webview
    //1.app的一个组件(app可以有webview也可以没有.)
    //2.用于加载h5页面是一个小型的浏览器内核.

//file:// 协议:加载本地文件,速度快;
//http(s):// 协议:加载远程文件,速度慢;


//hybrid适用的场景
    //1.不是所有的场景都适用hybrid;
    //2.客户端/native:体验要求极高变化不平凡的页面;
    //3.适用hybrid:体验要求高,变化频繁(如头条的新闻详情页);
    //4.使用h5:单次的运营活动(如红包),体验无要求,不常用的(如举报/反馈等页面)

//hybrid实现方式:
    //1.前端做好静态页面(CSS/HTML/js),交给客户端;
    //2.客户端拿到静态页面,以文件形式存储在app中;
    //3.客户端在一个webview中;
    //4.使用file://加载静态页面;

                    // app



        //webview       <--file协议--       //静态页面 js css html



//问题:
    //1.app发布之后,静态文件如何实时更新.
        //.要替换每个客户端的静态文件;
        //.只能客户端来做
        //.客户端 去server下载最新的静态文件包,并解压相关文件,
        //  这个过程中为了避免浪费流量,应该对比客户端版本和静态文件包版本,不同则下载,
        //  并将包的版本替换到客户端的版本
        //.我们维护server端的静态文件;

    //2.静态页面如何获取内容?
                                                       